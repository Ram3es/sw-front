stages:
  - build
  - deploy

build_staging:
  stage: build
  image: docker:18-git
  only:
    - staging
  services:
    - docker:18-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:staging .
    - docker push $CI_REGISTRY_IMAGE:staging

deploy_staging:
  stage: deploy
  image: alpine:latest
  only:
    - staging
  script:
    - chmod og= $SSH_KEY
    - apk update && apk add openssh-client
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no $STAGING_USER@$STAGING_SERVER "cd ~/skinwallet && docker compose rm -s -f frontend"
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no $STAGING_USER@$STAGING_SERVER "cd ~/skinwallet && docker image rm $CI_REGISTRY_IMAGE:staging || true"
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no $STAGING_USER@$STAGING_SERVER "cd ~/skinwallet && docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY"
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no $STAGING_USER@$STAGING_SERVER "cd ~/skinwallet && docker pull $CI_REGISTRY_IMAGE:staging"
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no $STAGING_USER@$STAGING_SERVER "cd ~/skinwallet && docker compose up -d frontend"

